#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AvonManager.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AvonDatabase")]
	public partial class AvonDatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertArtikel(Artikel instance);
    partial void UpdateArtikel(Artikel instance);
    partial void DeleteArtikel(Artikel instance);
    partial void InsertArtikelVarianten(ArtikelVarianten instance);
    partial void UpdateArtikelVarianten(ArtikelVarianten instance);
    partial void DeleteArtikelVarianten(ArtikelVarianten instance);
    partial void InsertKunden(Kunden instance);
    partial void UpdateKunden(Kunden instance);
    partial void DeleteKunden(Kunden instance);
    partial void InsertKategorien(Kategorien instance);
    partial void UpdateKategorien(Kategorien instance);
    partial void DeleteKategorien(Kategorien instance);
    partial void InsertMarkierungen_x_Artikel(Markierungen_x_Artikel instance);
    partial void UpdateMarkierungen_x_Artikel(Markierungen_x_Artikel instance);
    partial void DeleteMarkierungen_x_Artikel(Markierungen_x_Artikel instance);
    partial void InsertMarkierungen(Markierungen instance);
    partial void UpdateMarkierungen(Markierungen instance);
    partial void DeleteMarkierungen(Markierungen instance);
    partial void InsertSerien(Serien instance);
    partial void UpdateSerien(Serien instance);
    partial void DeleteSerien(Serien instance);
    partial void InsertKategorien_x_Artikel(Kategorien_x_Artikel instance);
    partial void UpdateKategorien_x_Artikel(Kategorien_x_Artikel instance);
    partial void DeleteKategorien_x_Artikel(Kategorien_x_Artikel instance);
    #endregion
		
		public AvonDatabaseDataContext() : 
				base(global::AvonManager.Data.Properties.Settings.Default.AvDBaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AvonDatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AvonDatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AvonDatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AvonDatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Artikel> Artikels
		{
			get
			{
				return this.GetTable<Artikel>();
			}
		}
		
		public System.Data.Linq.Table<ArtikelVarianten> ArtikelVariantens
		{
			get
			{
				return this.GetTable<ArtikelVarianten>();
			}
		}
		
		public System.Data.Linq.Table<Kunden> Kundens
		{
			get
			{
				return this.GetTable<Kunden>();
			}
		}
		
		public System.Data.Linq.Table<Kategorien> Kategoriens
		{
			get
			{
				return this.GetTable<Kategorien>();
			}
		}
		
		public System.Data.Linq.Table<Markierungen_x_Artikel> Markierungen_x_Artikels
		{
			get
			{
				return this.GetTable<Markierungen_x_Artikel>();
			}
		}
		
		public System.Data.Linq.Table<Markierungen> Markierungens
		{
			get
			{
				return this.GetTable<Markierungen>();
			}
		}
		
		public System.Data.Linq.Table<Serien> Seriens
		{
			get
			{
				return this.GetTable<Serien>();
			}
		}
		
		public System.Data.Linq.Table<Kategorien_x_Artikel> Kategorien_x_Artikels
		{
			get
			{
				return this.GetTable<Kategorien_x_Artikel>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Artikel")]
	public partial class Artikel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArtikelId;
		
		private string _Artikelname;
		
		private string _Artikelbeschreibung;
		
		private string _ArtikelNr;
		
		private string _Inhalt;
		
		private System.Nullable<decimal> _Einzelpreis;
		
		private System.Nullable<int> _Lagerbestand;
		
		private System.Nullable<int> _SerienId;
		
		private System.Data.Linq.Binary _Bild;
		
		private EntitySet<ArtikelVarianten> _ArtikelVariantens;
		
		private EntitySet<Markierungen_x_Artikel> _Markierungen_x_Artikels;
		
		private EntitySet<Kategorien_x_Artikel> _Kategorien_x_Artikels;
		
		private EntityRef<Serien> _Serien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArtikelIdChanging(int value);
    partial void OnArtikelIdChanged();
    partial void OnArtikelnameChanging(string value);
    partial void OnArtikelnameChanged();
    partial void OnArtikelbeschreibungChanging(string value);
    partial void OnArtikelbeschreibungChanged();
    partial void OnArtikelNrChanging(string value);
    partial void OnArtikelNrChanged();
    partial void OnInhaltChanging(string value);
    partial void OnInhaltChanged();
    partial void OnEinzelpreisChanging(System.Nullable<decimal> value);
    partial void OnEinzelpreisChanged();
    partial void OnLagerbestandChanging(System.Nullable<int> value);
    partial void OnLagerbestandChanged();
    partial void OnSerienIdChanging(System.Nullable<int> value);
    partial void OnSerienIdChanged();
    partial void OnBildChanging(System.Data.Linq.Binary value);
    partial void OnBildChanged();
    #endregion
		
		public Artikel()
		{
			this._ArtikelVariantens = new EntitySet<ArtikelVarianten>(new Action<ArtikelVarianten>(this.attach_ArtikelVariantens), new Action<ArtikelVarianten>(this.detach_ArtikelVariantens));
			this._Markierungen_x_Artikels = new EntitySet<Markierungen_x_Artikel>(new Action<Markierungen_x_Artikel>(this.attach_Markierungen_x_Artikels), new Action<Markierungen_x_Artikel>(this.detach_Markierungen_x_Artikels));
			this._Kategorien_x_Artikels = new EntitySet<Kategorien_x_Artikel>(new Action<Kategorien_x_Artikel>(this.attach_Kategorien_x_Artikels), new Action<Kategorien_x_Artikel>(this.detach_Kategorien_x_Artikels));
			this._Serien = default(EntityRef<Serien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtikelId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ArtikelId
		{
			get
			{
				return this._ArtikelId;
			}
			set
			{
				if ((this._ArtikelId != value))
				{
					this.OnArtikelIdChanging(value);
					this.SendPropertyChanging();
					this._ArtikelId = value;
					this.SendPropertyChanged("ArtikelId");
					this.OnArtikelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Artikelname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Artikelname
		{
			get
			{
				return this._Artikelname;
			}
			set
			{
				if ((this._Artikelname != value))
				{
					this.OnArtikelnameChanging(value);
					this.SendPropertyChanging();
					this._Artikelname = value;
					this.SendPropertyChanged("Artikelname");
					this.OnArtikelnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Artikelbeschreibung", DbType="NVarChar(255)")]
		public string Artikelbeschreibung
		{
			get
			{
				return this._Artikelbeschreibung;
			}
			set
			{
				if ((this._Artikelbeschreibung != value))
				{
					this.OnArtikelbeschreibungChanging(value);
					this.SendPropertyChanging();
					this._Artikelbeschreibung = value;
					this.SendPropertyChanged("Artikelbeschreibung");
					this.OnArtikelbeschreibungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtikelNr", DbType="NVarChar(10)")]
		public string ArtikelNr
		{
			get
			{
				return this._ArtikelNr;
			}
			set
			{
				if ((this._ArtikelNr != value))
				{
					this.OnArtikelNrChanging(value);
					this.SendPropertyChanging();
					this._ArtikelNr = value;
					this.SendPropertyChanged("ArtikelNr");
					this.OnArtikelNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inhalt", DbType="NVarChar(50)")]
		public string Inhalt
		{
			get
			{
				return this._Inhalt;
			}
			set
			{
				if ((this._Inhalt != value))
				{
					this.OnInhaltChanging(value);
					this.SendPropertyChanging();
					this._Inhalt = value;
					this.SendPropertyChanged("Inhalt");
					this.OnInhaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Einzelpreis", DbType="Money")]
		public System.Nullable<decimal> Einzelpreis
		{
			get
			{
				return this._Einzelpreis;
			}
			set
			{
				if ((this._Einzelpreis != value))
				{
					this.OnEinzelpreisChanging(value);
					this.SendPropertyChanging();
					this._Einzelpreis = value;
					this.SendPropertyChanged("Einzelpreis");
					this.OnEinzelpreisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lagerbestand", DbType="Int")]
		public System.Nullable<int> Lagerbestand
		{
			get
			{
				return this._Lagerbestand;
			}
			set
			{
				if ((this._Lagerbestand != value))
				{
					this.OnLagerbestandChanging(value);
					this.SendPropertyChanging();
					this._Lagerbestand = value;
					this.SendPropertyChanged("Lagerbestand");
					this.OnLagerbestandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerienId", DbType="Int")]
		public System.Nullable<int> SerienId
		{
			get
			{
				return this._SerienId;
			}
			set
			{
				if ((this._SerienId != value))
				{
					if (this._Serien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSerienIdChanging(value);
					this.SendPropertyChanging();
					this._SerienId = value;
					this.SendPropertyChanged("SerienId");
					this.OnSerienIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bild", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Bild
		{
			get
			{
				return this._Bild;
			}
			set
			{
				if ((this._Bild != value))
				{
					this.OnBildChanging(value);
					this.SendPropertyChanging();
					this._Bild = value;
					this.SendPropertyChanged("Bild");
					this.OnBildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artikel_ArtikelVarianten", Storage="_ArtikelVariantens", ThisKey="ArtikelId", OtherKey="ArtikelId")]
		public EntitySet<ArtikelVarianten> ArtikelVariantens
		{
			get
			{
				return this._ArtikelVariantens;
			}
			set
			{
				this._ArtikelVariantens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artikel_Markierungen_x_Artikel", Storage="_Markierungen_x_Artikels", ThisKey="ArtikelId", OtherKey="ArtikelId")]
		public EntitySet<Markierungen_x_Artikel> Markierungen_x_Artikels
		{
			get
			{
				return this._Markierungen_x_Artikels;
			}
			set
			{
				this._Markierungen_x_Artikels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artikel_Kategorien_x_Artikel", Storage="_Kategorien_x_Artikels", ThisKey="ArtikelId", OtherKey="ArtikelId")]
		public EntitySet<Kategorien_x_Artikel> Kategorien_x_Artikels
		{
			get
			{
				return this._Kategorien_x_Artikels;
			}
			set
			{
				this._Kategorien_x_Artikels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Serien_Artikel", Storage="_Serien", ThisKey="SerienId", OtherKey="SerienId", IsForeignKey=true)]
		public Serien Serien
		{
			get
			{
				return this._Serien.Entity;
			}
			set
			{
				Serien previousValue = this._Serien.Entity;
				if (((previousValue != value) 
							|| (this._Serien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Serien.Entity = null;
						previousValue.Artikels.Remove(this);
					}
					this._Serien.Entity = value;
					if ((value != null))
					{
						value.Artikels.Add(this);
						this._SerienId = value.SerienId;
					}
					else
					{
						this._SerienId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Serien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArtikelVariantens(ArtikelVarianten entity)
		{
			this.SendPropertyChanging();
			entity.Artikel = this;
		}
		
		private void detach_ArtikelVariantens(ArtikelVarianten entity)
		{
			this.SendPropertyChanging();
			entity.Artikel = null;
		}
		
		private void attach_Markierungen_x_Artikels(Markierungen_x_Artikel entity)
		{
			this.SendPropertyChanging();
			entity.Artikel = this;
		}
		
		private void detach_Markierungen_x_Artikels(Markierungen_x_Artikel entity)
		{
			this.SendPropertyChanging();
			entity.Artikel = null;
		}
		
		private void attach_Kategorien_x_Artikels(Kategorien_x_Artikel entity)
		{
			this.SendPropertyChanging();
			entity.Artikel = this;
		}
		
		private void detach_Kategorien_x_Artikels(Kategorien_x_Artikel entity)
		{
			this.SendPropertyChanging();
			entity.Artikel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArtikelVarianten")]
	public partial class ArtikelVarianten : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VariantenId;
		
		private int _ArtikelId;
		
		private string _ArtikelNr;
		
		private string _Variante;
		
		private System.Nullable<int> _Lagerbestand;
		
		private System.Nullable<decimal> _Einzelpreis;
		
		private EntityRef<Artikel> _Artikel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVariantenIdChanging(int value);
    partial void OnVariantenIdChanged();
    partial void OnArtikelIdChanging(int value);
    partial void OnArtikelIdChanged();
    partial void OnArtikelNrChanging(string value);
    partial void OnArtikelNrChanged();
    partial void OnVarianteChanging(string value);
    partial void OnVarianteChanged();
    partial void OnLagerbestandChanging(System.Nullable<int> value);
    partial void OnLagerbestandChanged();
    partial void OnEinzelpreisChanging(System.Nullable<decimal> value);
    partial void OnEinzelpreisChanged();
    #endregion
		
		public ArtikelVarianten()
		{
			this._Artikel = default(EntityRef<Artikel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariantenId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VariantenId
		{
			get
			{
				return this._VariantenId;
			}
			set
			{
				if ((this._VariantenId != value))
				{
					this.OnVariantenIdChanging(value);
					this.SendPropertyChanging();
					this._VariantenId = value;
					this.SendPropertyChanged("VariantenId");
					this.OnVariantenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtikelId", DbType="Int NOT NULL")]
		public int ArtikelId
		{
			get
			{
				return this._ArtikelId;
			}
			set
			{
				if ((this._ArtikelId != value))
				{
					if (this._Artikel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArtikelIdChanging(value);
					this.SendPropertyChanging();
					this._ArtikelId = value;
					this.SendPropertyChanged("ArtikelId");
					this.OnArtikelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtikelNr", DbType="NVarChar(10)")]
		public string ArtikelNr
		{
			get
			{
				return this._ArtikelNr;
			}
			set
			{
				if ((this._ArtikelNr != value))
				{
					this.OnArtikelNrChanging(value);
					this.SendPropertyChanging();
					this._ArtikelNr = value;
					this.SendPropertyChanged("ArtikelNr");
					this.OnArtikelNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Variante", DbType="NVarChar(255)")]
		public string Variante
		{
			get
			{
				return this._Variante;
			}
			set
			{
				if ((this._Variante != value))
				{
					this.OnVarianteChanging(value);
					this.SendPropertyChanging();
					this._Variante = value;
					this.SendPropertyChanged("Variante");
					this.OnVarianteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lagerbestand", DbType="Int")]
		public System.Nullable<int> Lagerbestand
		{
			get
			{
				return this._Lagerbestand;
			}
			set
			{
				if ((this._Lagerbestand != value))
				{
					this.OnLagerbestandChanging(value);
					this.SendPropertyChanging();
					this._Lagerbestand = value;
					this.SendPropertyChanged("Lagerbestand");
					this.OnLagerbestandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Einzelpreis", DbType="Money")]
		public System.Nullable<decimal> Einzelpreis
		{
			get
			{
				return this._Einzelpreis;
			}
			set
			{
				if ((this._Einzelpreis != value))
				{
					this.OnEinzelpreisChanging(value);
					this.SendPropertyChanging();
					this._Einzelpreis = value;
					this.SendPropertyChanged("Einzelpreis");
					this.OnEinzelpreisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artikel_ArtikelVarianten", Storage="_Artikel", ThisKey="ArtikelId", OtherKey="ArtikelId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Artikel Artikel
		{
			get
			{
				return this._Artikel.Entity;
			}
			set
			{
				Artikel previousValue = this._Artikel.Entity;
				if (((previousValue != value) 
							|| (this._Artikel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Artikel.Entity = null;
						previousValue.ArtikelVariantens.Remove(this);
					}
					this._Artikel.Entity = value;
					if ((value != null))
					{
						value.ArtikelVariantens.Add(this);
						this._ArtikelId = value.ArtikelId;
					}
					else
					{
						this._ArtikelId = default(int);
					}
					this.SendPropertyChanged("Artikel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kunden")]
	public partial class Kunden : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KundenId;
		
		private string _Vorname;
		
		private string _Nachname;
		
		private string _Adresse;
		
		private string _Ort;
		
		private string _Postleitzahl;
		
		private string _EmailAdresse;
		
		private string _TelefonPrivat;
		
		private string _TelefonBeruflich;
		
		private string _MobilesTelefon;
		
		private string _Faxnummer;
		
		private System.Nullable<System.DateTime> _Geburtsdatum;
		
		private string _Anmerkungen;
		
		private System.Nullable<bool> _BekommtHeft;
		
		private System.Data.Linq.Binary _Bild;
		
		private System.Nullable<bool> _Inaktiv;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKundenIdChanging(int value);
    partial void OnKundenIdChanged();
    partial void OnVornameChanging(string value);
    partial void OnVornameChanged();
    partial void OnNachnameChanging(string value);
    partial void OnNachnameChanged();
    partial void OnAdresseChanging(string value);
    partial void OnAdresseChanged();
    partial void OnOrtChanging(string value);
    partial void OnOrtChanged();
    partial void OnPostleitzahlChanging(string value);
    partial void OnPostleitzahlChanged();
    partial void OnEmailAdresseChanging(string value);
    partial void OnEmailAdresseChanged();
    partial void OnTelefonPrivatChanging(string value);
    partial void OnTelefonPrivatChanged();
    partial void OnTelefonBeruflichChanging(string value);
    partial void OnTelefonBeruflichChanged();
    partial void OnMobilesTelefonChanging(string value);
    partial void OnMobilesTelefonChanged();
    partial void OnFaxnummerChanging(string value);
    partial void OnFaxnummerChanged();
    partial void OnGeburtsdatumChanging(System.Nullable<System.DateTime> value);
    partial void OnGeburtsdatumChanged();
    partial void OnAnmerkungenChanging(string value);
    partial void OnAnmerkungenChanged();
    partial void OnBekommtHeftChanging(System.Nullable<bool> value);
    partial void OnBekommtHeftChanged();
    partial void OnBildChanging(System.Data.Linq.Binary value);
    partial void OnBildChanged();
    partial void OnInaktivChanging(System.Nullable<bool> value);
    partial void OnInaktivChanged();
    #endregion
		
		public Kunden()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KundenId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KundenId
		{
			get
			{
				return this._KundenId;
			}
			set
			{
				if ((this._KundenId != value))
				{
					this.OnKundenIdChanging(value);
					this.SendPropertyChanging();
					this._KundenId = value;
					this.SendPropertyChanged("KundenId");
					this.OnKundenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vorname", DbType="NVarChar(50)")]
		public string Vorname
		{
			get
			{
				return this._Vorname;
			}
			set
			{
				if ((this._Vorname != value))
				{
					this.OnVornameChanging(value);
					this.SendPropertyChanging();
					this._Vorname = value;
					this.SendPropertyChanged("Vorname");
					this.OnVornameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nachname", DbType="NVarChar(50)")]
		public string Nachname
		{
			get
			{
				return this._Nachname;
			}
			set
			{
				if ((this._Nachname != value))
				{
					this.OnNachnameChanging(value);
					this.SendPropertyChanging();
					this._Nachname = value;
					this.SendPropertyChanged("Nachname");
					this.OnNachnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresse", DbType="NVarChar(255)")]
		public string Adresse
		{
			get
			{
				return this._Adresse;
			}
			set
			{
				if ((this._Adresse != value))
				{
					this.OnAdresseChanging(value);
					this.SendPropertyChanging();
					this._Adresse = value;
					this.SendPropertyChanged("Adresse");
					this.OnAdresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ort", DbType="NVarChar(50)")]
		public string Ort
		{
			get
			{
				return this._Ort;
			}
			set
			{
				if ((this._Ort != value))
				{
					this.OnOrtChanging(value);
					this.SendPropertyChanging();
					this._Ort = value;
					this.SendPropertyChanged("Ort");
					this.OnOrtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postleitzahl", DbType="NVarChar(20)")]
		public string Postleitzahl
		{
			get
			{
				return this._Postleitzahl;
			}
			set
			{
				if ((this._Postleitzahl != value))
				{
					this.OnPostleitzahlChanging(value);
					this.SendPropertyChanging();
					this._Postleitzahl = value;
					this.SendPropertyChanged("Postleitzahl");
					this.OnPostleitzahlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAdresse", DbType="NVarChar(50)")]
		public string EmailAdresse
		{
			get
			{
				return this._EmailAdresse;
			}
			set
			{
				if ((this._EmailAdresse != value))
				{
					this.OnEmailAdresseChanging(value);
					this.SendPropertyChanging();
					this._EmailAdresse = value;
					this.SendPropertyChanged("EmailAdresse");
					this.OnEmailAdresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelefonPrivat", DbType="NVarChar(30)")]
		public string TelefonPrivat
		{
			get
			{
				return this._TelefonPrivat;
			}
			set
			{
				if ((this._TelefonPrivat != value))
				{
					this.OnTelefonPrivatChanging(value);
					this.SendPropertyChanging();
					this._TelefonPrivat = value;
					this.SendPropertyChanged("TelefonPrivat");
					this.OnTelefonPrivatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelefonBeruflich", DbType="NVarChar(30)")]
		public string TelefonBeruflich
		{
			get
			{
				return this._TelefonBeruflich;
			}
			set
			{
				if ((this._TelefonBeruflich != value))
				{
					this.OnTelefonBeruflichChanging(value);
					this.SendPropertyChanging();
					this._TelefonBeruflich = value;
					this.SendPropertyChanged("TelefonBeruflich");
					this.OnTelefonBeruflichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilesTelefon", DbType="NVarChar(30)")]
		public string MobilesTelefon
		{
			get
			{
				return this._MobilesTelefon;
			}
			set
			{
				if ((this._MobilesTelefon != value))
				{
					this.OnMobilesTelefonChanging(value);
					this.SendPropertyChanging();
					this._MobilesTelefon = value;
					this.SendPropertyChanged("MobilesTelefon");
					this.OnMobilesTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Faxnummer", DbType="NVarChar(30)")]
		public string Faxnummer
		{
			get
			{
				return this._Faxnummer;
			}
			set
			{
				if ((this._Faxnummer != value))
				{
					this.OnFaxnummerChanging(value);
					this.SendPropertyChanging();
					this._Faxnummer = value;
					this.SendPropertyChanged("Faxnummer");
					this.OnFaxnummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Geburtsdatum", DbType="DateTime")]
		public System.Nullable<System.DateTime> Geburtsdatum
		{
			get
			{
				return this._Geburtsdatum;
			}
			set
			{
				if ((this._Geburtsdatum != value))
				{
					this.OnGeburtsdatumChanging(value);
					this.SendPropertyChanging();
					this._Geburtsdatum = value;
					this.SendPropertyChanged("Geburtsdatum");
					this.OnGeburtsdatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anmerkungen", DbType="NVarChar(4000)")]
		public string Anmerkungen
		{
			get
			{
				return this._Anmerkungen;
			}
			set
			{
				if ((this._Anmerkungen != value))
				{
					this.OnAnmerkungenChanging(value);
					this.SendPropertyChanging();
					this._Anmerkungen = value;
					this.SendPropertyChanged("Anmerkungen");
					this.OnAnmerkungenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BekommtHeft", DbType="Bit")]
		public System.Nullable<bool> BekommtHeft
		{
			get
			{
				return this._BekommtHeft;
			}
			set
			{
				if ((this._BekommtHeft != value))
				{
					this.OnBekommtHeftChanging(value);
					this.SendPropertyChanging();
					this._BekommtHeft = value;
					this.SendPropertyChanged("BekommtHeft");
					this.OnBekommtHeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bild", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Bild
		{
			get
			{
				return this._Bild;
			}
			set
			{
				if ((this._Bild != value))
				{
					this.OnBildChanging(value);
					this.SendPropertyChanging();
					this._Bild = value;
					this.SendPropertyChanged("Bild");
					this.OnBildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inaktiv", DbType="Bit")]
		public System.Nullable<bool> Inaktiv
		{
			get
			{
				return this._Inaktiv;
			}
			set
			{
				if ((this._Inaktiv != value))
				{
					this.OnInaktivChanging(value);
					this.SendPropertyChanging();
					this._Inaktiv = value;
					this.SendPropertyChanged("Inaktiv");
					this.OnInaktivChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kategorien")]
	public partial class Kategorien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KategorieId;
		
		private string _Name;
		
		private System.Nullable<int> _Parent;
		
		private System.Nullable<int> _Reihenfolge;
		
		private string _Bemerkung;
		
		private System.Data.Linq.Binary _Logo;
		
		private EntitySet<Kategorien_x_Artikel> _Kategorien_x_Artikels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKategorieIdChanging(int value);
    partial void OnKategorieIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentChanging(System.Nullable<int> value);
    partial void OnParentChanged();
    partial void OnReihenfolgeChanging(System.Nullable<int> value);
    partial void OnReihenfolgeChanged();
    partial void OnBemerkungChanging(string value);
    partial void OnBemerkungChanged();
    partial void OnLogoChanging(System.Data.Linq.Binary value);
    partial void OnLogoChanged();
    #endregion
		
		public Kategorien()
		{
			this._Kategorien_x_Artikels = new EntitySet<Kategorien_x_Artikel>(new Action<Kategorien_x_Artikel>(this.attach_Kategorien_x_Artikels), new Action<Kategorien_x_Artikel>(this.detach_Kategorien_x_Artikels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KategorieId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KategorieId
		{
			get
			{
				return this._KategorieId;
			}
			set
			{
				if ((this._KategorieId != value))
				{
					this.OnKategorieIdChanging(value);
					this.SendPropertyChanging();
					this._KategorieId = value;
					this.SendPropertyChanged("KategorieId");
					this.OnKategorieIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="Int")]
		public System.Nullable<int> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reihenfolge", DbType="Int")]
		public System.Nullable<int> Reihenfolge
		{
			get
			{
				return this._Reihenfolge;
			}
			set
			{
				if ((this._Reihenfolge != value))
				{
					this.OnReihenfolgeChanging(value);
					this.SendPropertyChanging();
					this._Reihenfolge = value;
					this.SendPropertyChanged("Reihenfolge");
					this.OnReihenfolgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bemerkung", DbType="NVarChar(1000)")]
		public string Bemerkung
		{
			get
			{
				return this._Bemerkung;
			}
			set
			{
				if ((this._Bemerkung != value))
				{
					this.OnBemerkungChanging(value);
					this.SendPropertyChanging();
					this._Bemerkung = value;
					this.SendPropertyChanged("Bemerkung");
					this.OnBemerkungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategorien_Kategorien_x_Artikel", Storage="_Kategorien_x_Artikels", ThisKey="KategorieId", OtherKey="KategorieId")]
		public EntitySet<Kategorien_x_Artikel> Kategorien_x_Artikels
		{
			get
			{
				return this._Kategorien_x_Artikels;
			}
			set
			{
				this._Kategorien_x_Artikels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kategorien_x_Artikels(Kategorien_x_Artikel entity)
		{
			this.SendPropertyChanging();
			entity.Kategorien = this;
		}
		
		private void detach_Kategorien_x_Artikels(Kategorien_x_Artikel entity)
		{
			this.SendPropertyChanging();
			entity.Kategorien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Markierungen_x_Artikel")]
	public partial class Markierungen_x_Artikel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MarkierungId;
		
		private int _ArtikelId;
		
		private EntityRef<Artikel> _Artikel;
		
		private EntityRef<Markierungen> _Markierungen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMarkierungIdChanging(int value);
    partial void OnMarkierungIdChanged();
    partial void OnArtikelIdChanging(int value);
    partial void OnArtikelIdChanged();
    #endregion
		
		public Markierungen_x_Artikel()
		{
			this._Artikel = default(EntityRef<Artikel>);
			this._Markierungen = default(EntityRef<Markierungen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkierungId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MarkierungId
		{
			get
			{
				return this._MarkierungId;
			}
			set
			{
				if ((this._MarkierungId != value))
				{
					if (this._Markierungen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarkierungIdChanging(value);
					this.SendPropertyChanging();
					this._MarkierungId = value;
					this.SendPropertyChanged("MarkierungId");
					this.OnMarkierungIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtikelId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ArtikelId
		{
			get
			{
				return this._ArtikelId;
			}
			set
			{
				if ((this._ArtikelId != value))
				{
					if (this._Artikel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArtikelIdChanging(value);
					this.SendPropertyChanging();
					this._ArtikelId = value;
					this.SendPropertyChanged("ArtikelId");
					this.OnArtikelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artikel_Markierungen_x_Artikel", Storage="_Artikel", ThisKey="ArtikelId", OtherKey="ArtikelId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Artikel Artikel
		{
			get
			{
				return this._Artikel.Entity;
			}
			set
			{
				Artikel previousValue = this._Artikel.Entity;
				if (((previousValue != value) 
							|| (this._Artikel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Artikel.Entity = null;
						previousValue.Markierungen_x_Artikels.Remove(this);
					}
					this._Artikel.Entity = value;
					if ((value != null))
					{
						value.Markierungen_x_Artikels.Add(this);
						this._ArtikelId = value.ArtikelId;
					}
					else
					{
						this._ArtikelId = default(int);
					}
					this.SendPropertyChanged("Artikel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Markierungen_Markierungen_x_Artikel", Storage="_Markierungen", ThisKey="MarkierungId", OtherKey="MarkierungId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Markierungen Markierungen
		{
			get
			{
				return this._Markierungen.Entity;
			}
			set
			{
				Markierungen previousValue = this._Markierungen.Entity;
				if (((previousValue != value) 
							|| (this._Markierungen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Markierungen.Entity = null;
						previousValue.Markierungen_x_Artikels.Remove(this);
					}
					this._Markierungen.Entity = value;
					if ((value != null))
					{
						value.Markierungen_x_Artikels.Add(this);
						this._MarkierungId = value.MarkierungId;
					}
					else
					{
						this._MarkierungId = default(int);
					}
					this.SendPropertyChanged("Markierungen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Markierungen")]
	public partial class Markierungen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MarkierungId;
		
		private int _EntitaetId;
		
		private string _Titel;
		
		private string _Bemerkung;
		
		private System.Nullable<int> _FarbeARGB;
		
		private EntitySet<Markierungen_x_Artikel> _Markierungen_x_Artikels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMarkierungIdChanging(int value);
    partial void OnMarkierungIdChanged();
    partial void OnEntitaetIdChanging(int value);
    partial void OnEntitaetIdChanged();
    partial void OnTitelChanging(string value);
    partial void OnTitelChanged();
    partial void OnBemerkungChanging(string value);
    partial void OnBemerkungChanged();
    partial void OnFarbeARGBChanging(System.Nullable<int> value);
    partial void OnFarbeARGBChanged();
    #endregion
		
		public Markierungen()
		{
			this._Markierungen_x_Artikels = new EntitySet<Markierungen_x_Artikel>(new Action<Markierungen_x_Artikel>(this.attach_Markierungen_x_Artikels), new Action<Markierungen_x_Artikel>(this.detach_Markierungen_x_Artikels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkierungId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MarkierungId
		{
			get
			{
				return this._MarkierungId;
			}
			set
			{
				if ((this._MarkierungId != value))
				{
					this.OnMarkierungIdChanging(value);
					this.SendPropertyChanging();
					this._MarkierungId = value;
					this.SendPropertyChanged("MarkierungId");
					this.OnMarkierungIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntitaetId", DbType="Int NOT NULL")]
		public int EntitaetId
		{
			get
			{
				return this._EntitaetId;
			}
			set
			{
				if ((this._EntitaetId != value))
				{
					this.OnEntitaetIdChanging(value);
					this.SendPropertyChanging();
					this._EntitaetId = value;
					this.SendPropertyChanged("EntitaetId");
					this.OnEntitaetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titel", DbType="NVarChar(100)")]
		public string Titel
		{
			get
			{
				return this._Titel;
			}
			set
			{
				if ((this._Titel != value))
				{
					this.OnTitelChanging(value);
					this.SendPropertyChanging();
					this._Titel = value;
					this.SendPropertyChanged("Titel");
					this.OnTitelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bemerkung", DbType="NVarChar(1000)")]
		public string Bemerkung
		{
			get
			{
				return this._Bemerkung;
			}
			set
			{
				if ((this._Bemerkung != value))
				{
					this.OnBemerkungChanging(value);
					this.SendPropertyChanging();
					this._Bemerkung = value;
					this.SendPropertyChanged("Bemerkung");
					this.OnBemerkungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FarbeARGB", DbType="Int")]
		public System.Nullable<int> FarbeARGB
		{
			get
			{
				return this._FarbeARGB;
			}
			set
			{
				if ((this._FarbeARGB != value))
				{
					this.OnFarbeARGBChanging(value);
					this.SendPropertyChanging();
					this._FarbeARGB = value;
					this.SendPropertyChanged("FarbeARGB");
					this.OnFarbeARGBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Markierungen_Markierungen_x_Artikel", Storage="_Markierungen_x_Artikels", ThisKey="MarkierungId", OtherKey="MarkierungId")]
		public EntitySet<Markierungen_x_Artikel> Markierungen_x_Artikels
		{
			get
			{
				return this._Markierungen_x_Artikels;
			}
			set
			{
				this._Markierungen_x_Artikels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Markierungen_x_Artikels(Markierungen_x_Artikel entity)
		{
			this.SendPropertyChanging();
			entity.Markierungen = this;
		}
		
		private void detach_Markierungen_x_Artikels(Markierungen_x_Artikel entity)
		{
			this.SendPropertyChanging();
			entity.Markierungen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Serien")]
	public partial class Serien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SerienId;
		
		private string _Name;
		
		private System.Nullable<int> _Parent;
		
		private System.Nullable<int> _Reihenfolge;
		
		private string _Bemerkung;
		
		private System.Data.Linq.Binary _Logo;
		
		private EntitySet<Artikel> _Artikels;
		
		private EntitySet<Serien> _Seriens;
		
		private EntityRef<Serien> _Serien1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSerienIdChanging(int value);
    partial void OnSerienIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentChanging(System.Nullable<int> value);
    partial void OnParentChanged();
    partial void OnReihenfolgeChanging(System.Nullable<int> value);
    partial void OnReihenfolgeChanged();
    partial void OnBemerkungChanging(string value);
    partial void OnBemerkungChanged();
    partial void OnLogoChanging(System.Data.Linq.Binary value);
    partial void OnLogoChanged();
    #endregion
		
		public Serien()
		{
			this._Artikels = new EntitySet<Artikel>(new Action<Artikel>(this.attach_Artikels), new Action<Artikel>(this.detach_Artikels));
			this._Seriens = new EntitySet<Serien>(new Action<Serien>(this.attach_Seriens), new Action<Serien>(this.detach_Seriens));
			this._Serien1 = default(EntityRef<Serien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerienId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SerienId
		{
			get
			{
				return this._SerienId;
			}
			set
			{
				if ((this._SerienId != value))
				{
					this.OnSerienIdChanging(value);
					this.SendPropertyChanging();
					this._SerienId = value;
					this.SendPropertyChanged("SerienId");
					this.OnSerienIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="Int")]
		public System.Nullable<int> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					if (this._Serien1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reihenfolge", DbType="Int")]
		public System.Nullable<int> Reihenfolge
		{
			get
			{
				return this._Reihenfolge;
			}
			set
			{
				if ((this._Reihenfolge != value))
				{
					this.OnReihenfolgeChanging(value);
					this.SendPropertyChanging();
					this._Reihenfolge = value;
					this.SendPropertyChanged("Reihenfolge");
					this.OnReihenfolgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bemerkung", DbType="NVarChar(255)")]
		public string Bemerkung
		{
			get
			{
				return this._Bemerkung;
			}
			set
			{
				if ((this._Bemerkung != value))
				{
					this.OnBemerkungChanging(value);
					this.SendPropertyChanging();
					this._Bemerkung = value;
					this.SendPropertyChanged("Bemerkung");
					this.OnBemerkungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Serien_Artikel", Storage="_Artikels", ThisKey="SerienId", OtherKey="SerienId")]
		public EntitySet<Artikel> Artikels
		{
			get
			{
				return this._Artikels;
			}
			set
			{
				this._Artikels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Serien_Serien", Storage="_Seriens", ThisKey="SerienId", OtherKey="Parent")]
		public EntitySet<Serien> Seriens
		{
			get
			{
				return this._Seriens;
			}
			set
			{
				this._Seriens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Serien_Serien", Storage="_Serien1", ThisKey="Parent", OtherKey="SerienId", IsForeignKey=true)]
		public Serien Serien1
		{
			get
			{
				return this._Serien1.Entity;
			}
			set
			{
				Serien previousValue = this._Serien1.Entity;
				if (((previousValue != value) 
							|| (this._Serien1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Serien1.Entity = null;
						previousValue.Seriens.Remove(this);
					}
					this._Serien1.Entity = value;
					if ((value != null))
					{
						value.Seriens.Add(this);
						this._Parent = value.SerienId;
					}
					else
					{
						this._Parent = default(Nullable<int>);
					}
					this.SendPropertyChanged("Serien1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Artikels(Artikel entity)
		{
			this.SendPropertyChanging();
			entity.Serien = this;
		}
		
		private void detach_Artikels(Artikel entity)
		{
			this.SendPropertyChanging();
			entity.Serien = null;
		}
		
		private void attach_Seriens(Serien entity)
		{
			this.SendPropertyChanging();
			entity.Serien1 = this;
		}
		
		private void detach_Seriens(Serien entity)
		{
			this.SendPropertyChanging();
			entity.Serien1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kategorien_x_Artikel")]
	public partial class Kategorien_x_Artikel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KategorieId;
		
		private int _ArtikelId;
		
		private EntityRef<Artikel> _Artikel;
		
		private EntityRef<Kategorien> _Kategorien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKategorieIdChanging(int value);
    partial void OnKategorieIdChanged();
    partial void OnArtikelIdChanging(int value);
    partial void OnArtikelIdChanged();
    #endregion
		
		public Kategorien_x_Artikel()
		{
			this._Artikel = default(EntityRef<Artikel>);
			this._Kategorien = default(EntityRef<Kategorien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KategorieId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int KategorieId
		{
			get
			{
				return this._KategorieId;
			}
			set
			{
				if ((this._KategorieId != value))
				{
					if (this._Kategorien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKategorieIdChanging(value);
					this.SendPropertyChanging();
					this._KategorieId = value;
					this.SendPropertyChanged("KategorieId");
					this.OnKategorieIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtikelId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ArtikelId
		{
			get
			{
				return this._ArtikelId;
			}
			set
			{
				if ((this._ArtikelId != value))
				{
					if (this._Artikel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArtikelIdChanging(value);
					this.SendPropertyChanging();
					this._ArtikelId = value;
					this.SendPropertyChanged("ArtikelId");
					this.OnArtikelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artikel_Kategorien_x_Artikel", Storage="_Artikel", ThisKey="ArtikelId", OtherKey="ArtikelId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Artikel Artikel
		{
			get
			{
				return this._Artikel.Entity;
			}
			set
			{
				Artikel previousValue = this._Artikel.Entity;
				if (((previousValue != value) 
							|| (this._Artikel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Artikel.Entity = null;
						previousValue.Kategorien_x_Artikels.Remove(this);
					}
					this._Artikel.Entity = value;
					if ((value != null))
					{
						value.Kategorien_x_Artikels.Add(this);
						this._ArtikelId = value.ArtikelId;
					}
					else
					{
						this._ArtikelId = default(int);
					}
					this.SendPropertyChanged("Artikel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategorien_Kategorien_x_Artikel", Storage="_Kategorien", ThisKey="KategorieId", OtherKey="KategorieId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Kategorien Kategorien
		{
			get
			{
				return this._Kategorien.Entity;
			}
			set
			{
				Kategorien previousValue = this._Kategorien.Entity;
				if (((previousValue != value) 
							|| (this._Kategorien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kategorien.Entity = null;
						previousValue.Kategorien_x_Artikels.Remove(this);
					}
					this._Kategorien.Entity = value;
					if ((value != null))
					{
						value.Kategorien_x_Artikels.Add(this);
						this._KategorieId = value.KategorieId;
					}
					else
					{
						this._KategorieId = default(int);
					}
					this.SendPropertyChanged("Kategorien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
