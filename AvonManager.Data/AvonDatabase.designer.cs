#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AvonManager.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AvonDatabase")]
	public partial class AvonDatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertArtikel(Artikel instance);
    partial void UpdateArtikel(Artikel instance);
    partial void DeleteArtikel(Artikel instance);
    partial void InsertKunden(Kunden instance);
    partial void UpdateKunden(Kunden instance);
    partial void DeleteKunden(Kunden instance);
    partial void InsertKategorien(Kategorien instance);
    partial void UpdateKategorien(Kategorien instance);
    partial void DeleteKategorien(Kategorien instance);
    partial void InsertMarkierungen_x_Artikel(Markierungen_x_Artikel instance);
    partial void UpdateMarkierungen_x_Artikel(Markierungen_x_Artikel instance);
    partial void DeleteMarkierungen_x_Artikel(Markierungen_x_Artikel instance);
    partial void InsertMarkierungen(Markierungen instance);
    partial void UpdateMarkierungen(Markierungen instance);
    partial void DeleteMarkierungen(Markierungen instance);
    partial void InsertSerien(Serien instance);
    partial void UpdateSerien(Serien instance);
    partial void DeleteSerien(Serien instance);
    partial void InsertKategorien_x_Artikel(Kategorien_x_Artikel instance);
    partial void UpdateKategorien_x_Artikel(Kategorien_x_Artikel instance);
    partial void DeleteKategorien_x_Artikel(Kategorien_x_Artikel instance);
    partial void InsertHefte(Hefte instance);
    partial void UpdateHefte(Hefte instance);
    partial void DeleteHefte(Hefte instance);
    partial void InsertHefte_x_Kunden(Hefte_x_Kunden instance);
    partial void UpdateHefte_x_Kunden(Hefte_x_Kunden instance);
    partial void DeleteHefte_x_Kunden(Hefte_x_Kunden instance);
    partial void InsertEntitaeten(Entitaeten instance);
    partial void UpdateEntitaeten(Entitaeten instance);
    partial void DeleteEntitaeten(Entitaeten instance);
    partial void InsertBestellung(Bestellung instance);
    partial void UpdateBestellung(Bestellung instance);
    partial void DeleteBestellung(Bestellung instance);
    partial void InsertBestelldetail(Bestelldetail instance);
    partial void UpdateBestelldetail(Bestelldetail instance);
    partial void DeleteBestelldetail(Bestelldetail instance);
    partial void InsertBestellstatus(Bestellstatus instance);
    partial void UpdateBestellstatus(Bestellstatus instance);
    partial void DeleteBestellstatus(Bestellstatus instance);
    #endregion
		
		public AvonDatabaseDataContext() : 
				base(global::AvonManager.Data.Properties.Settings.Default.AvDBaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AvonDatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AvonDatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AvonDatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AvonDatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Artikel> Artikels
		{
			get
			{
				return this.GetTable<Artikel>();
			}
		}
		
		public System.Data.Linq.Table<Kunden> Kundens
		{
			get
			{
				return this.GetTable<Kunden>();
			}
		}
		
		public System.Data.Linq.Table<Kategorien> Kategoriens
		{
			get
			{
				return this.GetTable<Kategorien>();
			}
		}
		
		public System.Data.Linq.Table<Markierungen_x_Artikel> Markierungen_x_Artikels
		{
			get
			{
				return this.GetTable<Markierungen_x_Artikel>();
			}
		}
		
		public System.Data.Linq.Table<Markierungen> Markierungens
		{
			get
			{
				return this.GetTable<Markierungen>();
			}
		}
		
		public System.Data.Linq.Table<Serien> Seriens
		{
			get
			{
				return this.GetTable<Serien>();
			}
		}
		
		public System.Data.Linq.Table<Kategorien_x_Artikel> Kategorien_x_Artikels
		{
			get
			{
				return this.GetTable<Kategorien_x_Artikel>();
			}
		}
		
		public System.Data.Linq.Table<Hefte> Heftes
		{
			get
			{
				return this.GetTable<Hefte>();
			}
		}
		
		public System.Data.Linq.Table<Hefte_x_Kunden> Hefte_x_Kundens
		{
			get
			{
				return this.GetTable<Hefte_x_Kunden>();
			}
		}
		
		public System.Data.Linq.Table<Entitaeten> Entitaetens
		{
			get
			{
				return this.GetTable<Entitaeten>();
			}
		}
		
		public System.Data.Linq.Table<Bestellung> Bestellungs
		{
			get
			{
				return this.GetTable<Bestellung>();
			}
		}
		
		public System.Data.Linq.Table<Bestelldetail> Bestelldetails
		{
			get
			{
				return this.GetTable<Bestelldetail>();
			}
		}
		
		public System.Data.Linq.Table<Bestellstatus> Bestellstatus
		{
			get
			{
				return this.GetTable<Bestellstatus>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Artikel")]
	public partial class Artikel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArtikelId;
		
		private string _Artikelname;
		
		private string _Artikelbeschreibung;
		
		private string _ArtikelNr;
		
		private string _Inhalt;
		
		private System.Nullable<decimal> _Einzelpreis;
		
		private System.Nullable<int> _Lagerbestand;
		
		private System.Nullable<int> _SerienId;
		
		private System.Data.Linq.Binary _Bild;
		
		private System.DateTime _ChangedAt;
		
		private EntitySet<Markierungen_x_Artikel> _Markierungen_x_Artikels;
		
		private EntitySet<Kategorien_x_Artikel> _Kategorien_x_Artikels;
		
		private EntityRef<Serien> _Serien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArtikelIdChanging(int value);
    partial void OnArtikelIdChanged();
    partial void OnArtikelnameChanging(string value);
    partial void OnArtikelnameChanged();
    partial void OnArtikelbeschreibungChanging(string value);
    partial void OnArtikelbeschreibungChanged();
    partial void OnArtikelNrChanging(string value);
    partial void OnArtikelNrChanged();
    partial void OnInhaltChanging(string value);
    partial void OnInhaltChanged();
    partial void OnEinzelpreisChanging(System.Nullable<decimal> value);
    partial void OnEinzelpreisChanged();
    partial void OnLagerbestandChanging(System.Nullable<int> value);
    partial void OnLagerbestandChanged();
    partial void OnSerienIdChanging(System.Nullable<int> value);
    partial void OnSerienIdChanged();
    partial void OnBildChanging(System.Data.Linq.Binary value);
    partial void OnBildChanged();
    partial void OnChangedAtChanging(System.DateTime value);
    partial void OnChangedAtChanged();
    #endregion
		
		public Artikel()
		{
			this._Markierungen_x_Artikels = new EntitySet<Markierungen_x_Artikel>(new Action<Markierungen_x_Artikel>(this.attach_Markierungen_x_Artikels), new Action<Markierungen_x_Artikel>(this.detach_Markierungen_x_Artikels));
			this._Kategorien_x_Artikels = new EntitySet<Kategorien_x_Artikel>(new Action<Kategorien_x_Artikel>(this.attach_Kategorien_x_Artikels), new Action<Kategorien_x_Artikel>(this.detach_Kategorien_x_Artikels));
			this._Serien = default(EntityRef<Serien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtikelId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ArtikelId
		{
			get
			{
				return this._ArtikelId;
			}
			set
			{
				if ((this._ArtikelId != value))
				{
					this.OnArtikelIdChanging(value);
					this.SendPropertyChanging();
					this._ArtikelId = value;
					this.SendPropertyChanged("ArtikelId");
					this.OnArtikelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Artikelname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Artikelname
		{
			get
			{
				return this._Artikelname;
			}
			set
			{
				if ((this._Artikelname != value))
				{
					this.OnArtikelnameChanging(value);
					this.SendPropertyChanging();
					this._Artikelname = value;
					this.SendPropertyChanged("Artikelname");
					this.OnArtikelnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Artikelbeschreibung", DbType="NVarChar(255)")]
		public string Artikelbeschreibung
		{
			get
			{
				return this._Artikelbeschreibung;
			}
			set
			{
				if ((this._Artikelbeschreibung != value))
				{
					this.OnArtikelbeschreibungChanging(value);
					this.SendPropertyChanging();
					this._Artikelbeschreibung = value;
					this.SendPropertyChanged("Artikelbeschreibung");
					this.OnArtikelbeschreibungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtikelNr", DbType="NVarChar(10)")]
		public string ArtikelNr
		{
			get
			{
				return this._ArtikelNr;
			}
			set
			{
				if ((this._ArtikelNr != value))
				{
					this.OnArtikelNrChanging(value);
					this.SendPropertyChanging();
					this._ArtikelNr = value;
					this.SendPropertyChanged("ArtikelNr");
					this.OnArtikelNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inhalt", DbType="NVarChar(50)")]
		public string Inhalt
		{
			get
			{
				return this._Inhalt;
			}
			set
			{
				if ((this._Inhalt != value))
				{
					this.OnInhaltChanging(value);
					this.SendPropertyChanging();
					this._Inhalt = value;
					this.SendPropertyChanged("Inhalt");
					this.OnInhaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Einzelpreis", DbType="Money")]
		public System.Nullable<decimal> Einzelpreis
		{
			get
			{
				return this._Einzelpreis;
			}
			set
			{
				if ((this._Einzelpreis != value))
				{
					this.OnEinzelpreisChanging(value);
					this.SendPropertyChanging();
					this._Einzelpreis = value;
					this.SendPropertyChanged("Einzelpreis");
					this.OnEinzelpreisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lagerbestand", DbType="Int")]
		public System.Nullable<int> Lagerbestand
		{
			get
			{
				return this._Lagerbestand;
			}
			set
			{
				if ((this._Lagerbestand != value))
				{
					this.OnLagerbestandChanging(value);
					this.SendPropertyChanging();
					this._Lagerbestand = value;
					this.SendPropertyChanged("Lagerbestand");
					this.OnLagerbestandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerienId", DbType="Int")]
		public System.Nullable<int> SerienId
		{
			get
			{
				return this._SerienId;
			}
			set
			{
				if ((this._SerienId != value))
				{
					if (this._Serien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSerienIdChanging(value);
					this.SendPropertyChanging();
					this._SerienId = value;
					this.SendPropertyChanged("SerienId");
					this.OnSerienIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bild", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Bild
		{
			get
			{
				return this._Bild;
			}
			set
			{
				if ((this._Bild != value))
				{
					this.OnBildChanging(value);
					this.SendPropertyChanging();
					this._Bild = value;
					this.SendPropertyChanged("Bild");
					this.OnBildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedAt", DbType="datetime")]
		public System.DateTime ChangedAt
		{
			get
			{
				return this._ChangedAt;
			}
			set
			{
				if ((this._ChangedAt != value))
				{
					this.OnChangedAtChanging(value);
					this.SendPropertyChanging();
					this._ChangedAt = value;
					this.SendPropertyChanged("ChangedAt");
					this.OnChangedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artikel_Markierungen_x_Artikel", Storage="_Markierungen_x_Artikels", ThisKey="ArtikelId", OtherKey="ArtikelId")]
		public EntitySet<Markierungen_x_Artikel> Markierungen_x_Artikels
		{
			get
			{
				return this._Markierungen_x_Artikels;
			}
			set
			{
				this._Markierungen_x_Artikels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artikel_Kategorien_x_Artikel", Storage="_Kategorien_x_Artikels", ThisKey="ArtikelId", OtherKey="ArtikelId")]
		public EntitySet<Kategorien_x_Artikel> Kategorien_x_Artikels
		{
			get
			{
				return this._Kategorien_x_Artikels;
			}
			set
			{
				this._Kategorien_x_Artikels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Serien_Artikel", Storage="_Serien", ThisKey="SerienId", OtherKey="SerienId", IsForeignKey=true)]
		public Serien Serien
		{
			get
			{
				return this._Serien.Entity;
			}
			set
			{
				Serien previousValue = this._Serien.Entity;
				if (((previousValue != value) 
							|| (this._Serien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Serien.Entity = null;
						previousValue.Artikels.Remove(this);
					}
					this._Serien.Entity = value;
					if ((value != null))
					{
						value.Artikels.Add(this);
						this._SerienId = value.SerienId;
					}
					else
					{
						this._SerienId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Serien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Markierungen_x_Artikels(Markierungen_x_Artikel entity)
		{
			this.SendPropertyChanging();
			entity.Artikel = this;
		}
		
		private void detach_Markierungen_x_Artikels(Markierungen_x_Artikel entity)
		{
			this.SendPropertyChanging();
			entity.Artikel = null;
		}
		
		private void attach_Kategorien_x_Artikels(Kategorien_x_Artikel entity)
		{
			this.SendPropertyChanging();
			entity.Artikel = this;
		}
		
		private void detach_Kategorien_x_Artikels(Kategorien_x_Artikel entity)
		{
			this.SendPropertyChanging();
			entity.Artikel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kunden")]
	public partial class Kunden : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KundenId;
		
		private string _Vorname;
		
		private string _Nachname;
		
		private string _Adresse;
		
		private string _Ort;
		
		private string _Postleitzahl;
		
		private string _EmailAdresse;
		
		private string _TelefonPrivat;
		
		private string _TelefonBeruflich;
		
		private string _MobilesTelefon;
		
		private string _Faxnummer;
		
		private System.Nullable<System.DateTime> _Geburtsdatum;
		
		private string _Anmerkungen;
		
		private System.Nullable<bool> _BekommtHeft;
		
		private System.Data.Linq.Binary _Bild;
		
		private System.Nullable<bool> _Inaktiv;
		
		private EntitySet<Hefte_x_Kunden> _Hefte_x_Kundens;
		
		private EntitySet<Bestellung> _Bestellungs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKundenIdChanging(int value);
    partial void OnKundenIdChanged();
    partial void OnVornameChanging(string value);
    partial void OnVornameChanged();
    partial void OnNachnameChanging(string value);
    partial void OnNachnameChanged();
    partial void OnAdresseChanging(string value);
    partial void OnAdresseChanged();
    partial void OnOrtChanging(string value);
    partial void OnOrtChanged();
    partial void OnPostleitzahlChanging(string value);
    partial void OnPostleitzahlChanged();
    partial void OnEmailAdresseChanging(string value);
    partial void OnEmailAdresseChanged();
    partial void OnTelefonPrivatChanging(string value);
    partial void OnTelefonPrivatChanged();
    partial void OnTelefonBeruflichChanging(string value);
    partial void OnTelefonBeruflichChanged();
    partial void OnMobilesTelefonChanging(string value);
    partial void OnMobilesTelefonChanged();
    partial void OnFaxnummerChanging(string value);
    partial void OnFaxnummerChanged();
    partial void OnGeburtsdatumChanging(System.Nullable<System.DateTime> value);
    partial void OnGeburtsdatumChanged();
    partial void OnAnmerkungenChanging(string value);
    partial void OnAnmerkungenChanged();
    partial void OnBekommtHeftChanging(System.Nullable<bool> value);
    partial void OnBekommtHeftChanged();
    partial void OnBildChanging(System.Data.Linq.Binary value);
    partial void OnBildChanged();
    partial void OnInaktivChanging(System.Nullable<bool> value);
    partial void OnInaktivChanged();
    #endregion
		
		public Kunden()
		{
			this._Hefte_x_Kundens = new EntitySet<Hefte_x_Kunden>(new Action<Hefte_x_Kunden>(this.attach_Hefte_x_Kundens), new Action<Hefte_x_Kunden>(this.detach_Hefte_x_Kundens));
			this._Bestellungs = new EntitySet<Bestellung>(new Action<Bestellung>(this.attach_Bestellungs), new Action<Bestellung>(this.detach_Bestellungs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KundenId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KundenId
		{
			get
			{
				return this._KundenId;
			}
			set
			{
				if ((this._KundenId != value))
				{
					this.OnKundenIdChanging(value);
					this.SendPropertyChanging();
					this._KundenId = value;
					this.SendPropertyChanged("KundenId");
					this.OnKundenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vorname", DbType="NVarChar(50)")]
		public string Vorname
		{
			get
			{
				return this._Vorname;
			}
			set
			{
				if ((this._Vorname != value))
				{
					this.OnVornameChanging(value);
					this.SendPropertyChanging();
					this._Vorname = value;
					this.SendPropertyChanged("Vorname");
					this.OnVornameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nachname", DbType="NVarChar(50)")]
		public string Nachname
		{
			get
			{
				return this._Nachname;
			}
			set
			{
				if ((this._Nachname != value))
				{
					this.OnNachnameChanging(value);
					this.SendPropertyChanging();
					this._Nachname = value;
					this.SendPropertyChanged("Nachname");
					this.OnNachnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresse", DbType="NVarChar(255)")]
		public string Adresse
		{
			get
			{
				return this._Adresse;
			}
			set
			{
				if ((this._Adresse != value))
				{
					this.OnAdresseChanging(value);
					this.SendPropertyChanging();
					this._Adresse = value;
					this.SendPropertyChanged("Adresse");
					this.OnAdresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ort", DbType="NVarChar(50)")]
		public string Ort
		{
			get
			{
				return this._Ort;
			}
			set
			{
				if ((this._Ort != value))
				{
					this.OnOrtChanging(value);
					this.SendPropertyChanging();
					this._Ort = value;
					this.SendPropertyChanged("Ort");
					this.OnOrtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postleitzahl", DbType="NVarChar(20)")]
		public string Postleitzahl
		{
			get
			{
				return this._Postleitzahl;
			}
			set
			{
				if ((this._Postleitzahl != value))
				{
					this.OnPostleitzahlChanging(value);
					this.SendPropertyChanging();
					this._Postleitzahl = value;
					this.SendPropertyChanged("Postleitzahl");
					this.OnPostleitzahlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAdresse", DbType="NVarChar(50)")]
		public string EmailAdresse
		{
			get
			{
				return this._EmailAdresse;
			}
			set
			{
				if ((this._EmailAdresse != value))
				{
					this.OnEmailAdresseChanging(value);
					this.SendPropertyChanging();
					this._EmailAdresse = value;
					this.SendPropertyChanged("EmailAdresse");
					this.OnEmailAdresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelefonPrivat", DbType="NVarChar(30)")]
		public string TelefonPrivat
		{
			get
			{
				return this._TelefonPrivat;
			}
			set
			{
				if ((this._TelefonPrivat != value))
				{
					this.OnTelefonPrivatChanging(value);
					this.SendPropertyChanging();
					this._TelefonPrivat = value;
					this.SendPropertyChanged("TelefonPrivat");
					this.OnTelefonPrivatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelefonBeruflich", DbType="NVarChar(30)")]
		public string TelefonBeruflich
		{
			get
			{
				return this._TelefonBeruflich;
			}
			set
			{
				if ((this._TelefonBeruflich != value))
				{
					this.OnTelefonBeruflichChanging(value);
					this.SendPropertyChanging();
					this._TelefonBeruflich = value;
					this.SendPropertyChanged("TelefonBeruflich");
					this.OnTelefonBeruflichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilesTelefon", DbType="NVarChar(30)")]
		public string MobilesTelefon
		{
			get
			{
				return this._MobilesTelefon;
			}
			set
			{
				if ((this._MobilesTelefon != value))
				{
					this.OnMobilesTelefonChanging(value);
					this.SendPropertyChanging();
					this._MobilesTelefon = value;
					this.SendPropertyChanged("MobilesTelefon");
					this.OnMobilesTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Faxnummer", DbType="NVarChar(30)")]
		public string Faxnummer
		{
			get
			{
				return this._Faxnummer;
			}
			set
			{
				if ((this._Faxnummer != value))
				{
					this.OnFaxnummerChanging(value);
					this.SendPropertyChanging();
					this._Faxnummer = value;
					this.SendPropertyChanged("Faxnummer");
					this.OnFaxnummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Geburtsdatum", DbType="DateTime")]
		public System.Nullable<System.DateTime> Geburtsdatum
		{
			get
			{
				return this._Geburtsdatum;
			}
			set
			{
				if ((this._Geburtsdatum != value))
				{
					this.OnGeburtsdatumChanging(value);
					this.SendPropertyChanging();
					this._Geburtsdatum = value;
					this.SendPropertyChanged("Geburtsdatum");
					this.OnGeburtsdatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anmerkungen", DbType="NVarChar(4000)")]
		public string Anmerkungen
		{
			get
			{
				return this._Anmerkungen;
			}
			set
			{
				if ((this._Anmerkungen != value))
				{
					this.OnAnmerkungenChanging(value);
					this.SendPropertyChanging();
					this._Anmerkungen = value;
					this.SendPropertyChanged("Anmerkungen");
					this.OnAnmerkungenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BekommtHeft", DbType="Bit")]
		public System.Nullable<bool> BekommtHeft
		{
			get
			{
				return this._BekommtHeft;
			}
			set
			{
				if ((this._BekommtHeft != value))
				{
					this.OnBekommtHeftChanging(value);
					this.SendPropertyChanging();
					this._BekommtHeft = value;
					this.SendPropertyChanged("BekommtHeft");
					this.OnBekommtHeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bild", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Bild
		{
			get
			{
				return this._Bild;
			}
			set
			{
				if ((this._Bild != value))
				{
					this.OnBildChanging(value);
					this.SendPropertyChanging();
					this._Bild = value;
					this.SendPropertyChanged("Bild");
					this.OnBildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inaktiv", DbType="Bit")]
		public System.Nullable<bool> Inaktiv
		{
			get
			{
				return this._Inaktiv;
			}
			set
			{
				if ((this._Inaktiv != value))
				{
					this.OnInaktivChanging(value);
					this.SendPropertyChanging();
					this._Inaktiv = value;
					this.SendPropertyChanged("Inaktiv");
					this.OnInaktivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kunden_Hefte_x_Kunden", Storage="_Hefte_x_Kundens", ThisKey="KundenId", OtherKey="KundenId")]
		public EntitySet<Hefte_x_Kunden> Hefte_x_Kundens
		{
			get
			{
				return this._Hefte_x_Kundens;
			}
			set
			{
				this._Hefte_x_Kundens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kunden_Bestellung", Storage="_Bestellungs", ThisKey="KundenId", OtherKey="KundenId")]
		public EntitySet<Bestellung> Bestellungs
		{
			get
			{
				return this._Bestellungs;
			}
			set
			{
				this._Bestellungs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hefte_x_Kundens(Hefte_x_Kunden entity)
		{
			this.SendPropertyChanging();
			entity.Kunden = this;
		}
		
		private void detach_Hefte_x_Kundens(Hefte_x_Kunden entity)
		{
			this.SendPropertyChanging();
			entity.Kunden = null;
		}
		
		private void attach_Bestellungs(Bestellung entity)
		{
			this.SendPropertyChanging();
			entity.Kunden = this;
		}
		
		private void detach_Bestellungs(Bestellung entity)
		{
			this.SendPropertyChanging();
			entity.Kunden = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kategorien")]
	public partial class Kategorien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KategorieId;
		
		private string _Name;
		
		private System.Nullable<int> _Parent;
		
		private System.Nullable<int> _Reihenfolge;
		
		private string _Bemerkung;
		
		private System.Data.Linq.Binary _Logo;
		
		private EntitySet<Kategorien_x_Artikel> _Kategorien_x_Artikels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKategorieIdChanging(int value);
    partial void OnKategorieIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentChanging(System.Nullable<int> value);
    partial void OnParentChanged();
    partial void OnReihenfolgeChanging(System.Nullable<int> value);
    partial void OnReihenfolgeChanged();
    partial void OnBemerkungChanging(string value);
    partial void OnBemerkungChanged();
    partial void OnLogoChanging(System.Data.Linq.Binary value);
    partial void OnLogoChanged();
    #endregion
		
		public Kategorien()
		{
			this._Kategorien_x_Artikels = new EntitySet<Kategorien_x_Artikel>(new Action<Kategorien_x_Artikel>(this.attach_Kategorien_x_Artikels), new Action<Kategorien_x_Artikel>(this.detach_Kategorien_x_Artikels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KategorieId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KategorieId
		{
			get
			{
				return this._KategorieId;
			}
			set
			{
				if ((this._KategorieId != value))
				{
					this.OnKategorieIdChanging(value);
					this.SendPropertyChanging();
					this._KategorieId = value;
					this.SendPropertyChanged("KategorieId");
					this.OnKategorieIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="Int")]
		public System.Nullable<int> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reihenfolge", DbType="Int")]
		public System.Nullable<int> Reihenfolge
		{
			get
			{
				return this._Reihenfolge;
			}
			set
			{
				if ((this._Reihenfolge != value))
				{
					this.OnReihenfolgeChanging(value);
					this.SendPropertyChanging();
					this._Reihenfolge = value;
					this.SendPropertyChanged("Reihenfolge");
					this.OnReihenfolgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bemerkung", DbType="NVarChar(1000)")]
		public string Bemerkung
		{
			get
			{
				return this._Bemerkung;
			}
			set
			{
				if ((this._Bemerkung != value))
				{
					this.OnBemerkungChanging(value);
					this.SendPropertyChanging();
					this._Bemerkung = value;
					this.SendPropertyChanged("Bemerkung");
					this.OnBemerkungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategorien_Kategorien_x_Artikel", Storage="_Kategorien_x_Artikels", ThisKey="KategorieId", OtherKey="KategorieId")]
		public EntitySet<Kategorien_x_Artikel> Kategorien_x_Artikels
		{
			get
			{
				return this._Kategorien_x_Artikels;
			}
			set
			{
				this._Kategorien_x_Artikels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kategorien_x_Artikels(Kategorien_x_Artikel entity)
		{
			this.SendPropertyChanging();
			entity.Kategorien = this;
		}
		
		private void detach_Kategorien_x_Artikels(Kategorien_x_Artikel entity)
		{
			this.SendPropertyChanging();
			entity.Kategorien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Markierungen_x_Artikel")]
	public partial class Markierungen_x_Artikel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MarkierungId;
		
		private int _ArtikelId;
		
		private EntityRef<Artikel> _Artikel;
		
		private EntityRef<Markierungen> _Markierungen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMarkierungIdChanging(int value);
    partial void OnMarkierungIdChanged();
    partial void OnArtikelIdChanging(int value);
    partial void OnArtikelIdChanged();
    #endregion
		
		public Markierungen_x_Artikel()
		{
			this._Artikel = default(EntityRef<Artikel>);
			this._Markierungen = default(EntityRef<Markierungen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkierungId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MarkierungId
		{
			get
			{
				return this._MarkierungId;
			}
			set
			{
				if ((this._MarkierungId != value))
				{
					if (this._Markierungen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarkierungIdChanging(value);
					this.SendPropertyChanging();
					this._MarkierungId = value;
					this.SendPropertyChanged("MarkierungId");
					this.OnMarkierungIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtikelId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ArtikelId
		{
			get
			{
				return this._ArtikelId;
			}
			set
			{
				if ((this._ArtikelId != value))
				{
					if (this._Artikel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArtikelIdChanging(value);
					this.SendPropertyChanging();
					this._ArtikelId = value;
					this.SendPropertyChanged("ArtikelId");
					this.OnArtikelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artikel_Markierungen_x_Artikel", Storage="_Artikel", ThisKey="ArtikelId", OtherKey="ArtikelId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Artikel Artikel
		{
			get
			{
				return this._Artikel.Entity;
			}
			set
			{
				Artikel previousValue = this._Artikel.Entity;
				if (((previousValue != value) 
							|| (this._Artikel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Artikel.Entity = null;
						previousValue.Markierungen_x_Artikels.Remove(this);
					}
					this._Artikel.Entity = value;
					if ((value != null))
					{
						value.Markierungen_x_Artikels.Add(this);
						this._ArtikelId = value.ArtikelId;
					}
					else
					{
						this._ArtikelId = default(int);
					}
					this.SendPropertyChanged("Artikel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Markierungen_Markierungen_x_Artikel", Storage="_Markierungen", ThisKey="MarkierungId", OtherKey="MarkierungId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Markierungen Markierungen
		{
			get
			{
				return this._Markierungen.Entity;
			}
			set
			{
				Markierungen previousValue = this._Markierungen.Entity;
				if (((previousValue != value) 
							|| (this._Markierungen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Markierungen.Entity = null;
						previousValue.Markierungen_x_Artikels.Remove(this);
					}
					this._Markierungen.Entity = value;
					if ((value != null))
					{
						value.Markierungen_x_Artikels.Add(this);
						this._MarkierungId = value.MarkierungId;
					}
					else
					{
						this._MarkierungId = default(int);
					}
					this.SendPropertyChanged("Markierungen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Markierungen")]
	public partial class Markierungen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MarkierungId;
		
		private int _EntitaetId;
		
		private string _Titel;
		
		private string _Bemerkung;
		
		private System.Nullable<int> _FarbeARGB;
		
		private EntitySet<Markierungen_x_Artikel> _Markierungen_x_Artikels;
		
		private EntityRef<Entitaeten> _Entitaeten;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMarkierungIdChanging(int value);
    partial void OnMarkierungIdChanged();
    partial void OnEntitaetIdChanging(int value);
    partial void OnEntitaetIdChanged();
    partial void OnTitelChanging(string value);
    partial void OnTitelChanged();
    partial void OnBemerkungChanging(string value);
    partial void OnBemerkungChanged();
    partial void OnFarbeARGBChanging(System.Nullable<int> value);
    partial void OnFarbeARGBChanged();
    #endregion
		
		public Markierungen()
		{
			this._Markierungen_x_Artikels = new EntitySet<Markierungen_x_Artikel>(new Action<Markierungen_x_Artikel>(this.attach_Markierungen_x_Artikels), new Action<Markierungen_x_Artikel>(this.detach_Markierungen_x_Artikels));
			this._Entitaeten = default(EntityRef<Entitaeten>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkierungId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MarkierungId
		{
			get
			{
				return this._MarkierungId;
			}
			set
			{
				if ((this._MarkierungId != value))
				{
					this.OnMarkierungIdChanging(value);
					this.SendPropertyChanging();
					this._MarkierungId = value;
					this.SendPropertyChanged("MarkierungId");
					this.OnMarkierungIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntitaetId", DbType="Int NOT NULL")]
		public int EntitaetId
		{
			get
			{
				return this._EntitaetId;
			}
			set
			{
				if ((this._EntitaetId != value))
				{
					if (this._Entitaeten.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntitaetIdChanging(value);
					this.SendPropertyChanging();
					this._EntitaetId = value;
					this.SendPropertyChanged("EntitaetId");
					this.OnEntitaetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titel", DbType="NVarChar(100)")]
		public string Titel
		{
			get
			{
				return this._Titel;
			}
			set
			{
				if ((this._Titel != value))
				{
					this.OnTitelChanging(value);
					this.SendPropertyChanging();
					this._Titel = value;
					this.SendPropertyChanged("Titel");
					this.OnTitelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bemerkung", DbType="NVarChar(1000)")]
		public string Bemerkung
		{
			get
			{
				return this._Bemerkung;
			}
			set
			{
				if ((this._Bemerkung != value))
				{
					this.OnBemerkungChanging(value);
					this.SendPropertyChanging();
					this._Bemerkung = value;
					this.SendPropertyChanged("Bemerkung");
					this.OnBemerkungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FarbeARGB", DbType="Int")]
		public System.Nullable<int> FarbeARGB
		{
			get
			{
				return this._FarbeARGB;
			}
			set
			{
				if ((this._FarbeARGB != value))
				{
					this.OnFarbeARGBChanging(value);
					this.SendPropertyChanging();
					this._FarbeARGB = value;
					this.SendPropertyChanged("FarbeARGB");
					this.OnFarbeARGBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Markierungen_Markierungen_x_Artikel", Storage="_Markierungen_x_Artikels", ThisKey="MarkierungId", OtherKey="MarkierungId")]
		public EntitySet<Markierungen_x_Artikel> Markierungen_x_Artikels
		{
			get
			{
				return this._Markierungen_x_Artikels;
			}
			set
			{
				this._Markierungen_x_Artikels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entitaeten_Markierungen", Storage="_Entitaeten", ThisKey="EntitaetId", OtherKey="EntitaetId", IsForeignKey=true)]
		public Entitaeten Entitaeten
		{
			get
			{
				return this._Entitaeten.Entity;
			}
			set
			{
				Entitaeten previousValue = this._Entitaeten.Entity;
				if (((previousValue != value) 
							|| (this._Entitaeten.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entitaeten.Entity = null;
						previousValue.Markierungens.Remove(this);
					}
					this._Entitaeten.Entity = value;
					if ((value != null))
					{
						value.Markierungens.Add(this);
						this._EntitaetId = value.EntitaetId;
					}
					else
					{
						this._EntitaetId = default(int);
					}
					this.SendPropertyChanged("Entitaeten");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Markierungen_x_Artikels(Markierungen_x_Artikel entity)
		{
			this.SendPropertyChanging();
			entity.Markierungen = this;
		}
		
		private void detach_Markierungen_x_Artikels(Markierungen_x_Artikel entity)
		{
			this.SendPropertyChanging();
			entity.Markierungen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Serien")]
	public partial class Serien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SerienId;
		
		private string _Name;
		
		private System.Nullable<int> _Parent;
		
		private System.Nullable<int> _Reihenfolge;
		
		private string _Bemerkung;
		
		private System.Data.Linq.Binary _Logo;
		
		private EntitySet<Artikel> _Artikels;
		
		private EntitySet<Serien> _Seriens;
		
		private EntityRef<Serien> _Serien1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSerienIdChanging(int value);
    partial void OnSerienIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentChanging(System.Nullable<int> value);
    partial void OnParentChanged();
    partial void OnReihenfolgeChanging(System.Nullable<int> value);
    partial void OnReihenfolgeChanged();
    partial void OnBemerkungChanging(string value);
    partial void OnBemerkungChanged();
    partial void OnLogoChanging(System.Data.Linq.Binary value);
    partial void OnLogoChanged();
    #endregion
		
		public Serien()
		{
			this._Artikels = new EntitySet<Artikel>(new Action<Artikel>(this.attach_Artikels), new Action<Artikel>(this.detach_Artikels));
			this._Seriens = new EntitySet<Serien>(new Action<Serien>(this.attach_Seriens), new Action<Serien>(this.detach_Seriens));
			this._Serien1 = default(EntityRef<Serien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerienId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SerienId
		{
			get
			{
				return this._SerienId;
			}
			set
			{
				if ((this._SerienId != value))
				{
					this.OnSerienIdChanging(value);
					this.SendPropertyChanging();
					this._SerienId = value;
					this.SendPropertyChanged("SerienId");
					this.OnSerienIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="Int")]
		public System.Nullable<int> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					if (this._Serien1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reihenfolge", DbType="Int")]
		public System.Nullable<int> Reihenfolge
		{
			get
			{
				return this._Reihenfolge;
			}
			set
			{
				if ((this._Reihenfolge != value))
				{
					this.OnReihenfolgeChanging(value);
					this.SendPropertyChanging();
					this._Reihenfolge = value;
					this.SendPropertyChanged("Reihenfolge");
					this.OnReihenfolgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bemerkung", DbType="NVarChar(255)")]
		public string Bemerkung
		{
			get
			{
				return this._Bemerkung;
			}
			set
			{
				if ((this._Bemerkung != value))
				{
					this.OnBemerkungChanging(value);
					this.SendPropertyChanging();
					this._Bemerkung = value;
					this.SendPropertyChanged("Bemerkung");
					this.OnBemerkungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Serien_Artikel", Storage="_Artikels", ThisKey="SerienId", OtherKey="SerienId")]
		public EntitySet<Artikel> Artikels
		{
			get
			{
				return this._Artikels;
			}
			set
			{
				this._Artikels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Serien_Serien", Storage="_Seriens", ThisKey="SerienId", OtherKey="Parent")]
		public EntitySet<Serien> Seriens
		{
			get
			{
				return this._Seriens;
			}
			set
			{
				this._Seriens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Serien_Serien", Storage="_Serien1", ThisKey="Parent", OtherKey="SerienId", IsForeignKey=true)]
		public Serien Serien1
		{
			get
			{
				return this._Serien1.Entity;
			}
			set
			{
				Serien previousValue = this._Serien1.Entity;
				if (((previousValue != value) 
							|| (this._Serien1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Serien1.Entity = null;
						previousValue.Seriens.Remove(this);
					}
					this._Serien1.Entity = value;
					if ((value != null))
					{
						value.Seriens.Add(this);
						this._Parent = value.SerienId;
					}
					else
					{
						this._Parent = default(Nullable<int>);
					}
					this.SendPropertyChanged("Serien1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Artikels(Artikel entity)
		{
			this.SendPropertyChanging();
			entity.Serien = this;
		}
		
		private void detach_Artikels(Artikel entity)
		{
			this.SendPropertyChanging();
			entity.Serien = null;
		}
		
		private void attach_Seriens(Serien entity)
		{
			this.SendPropertyChanging();
			entity.Serien1 = this;
		}
		
		private void detach_Seriens(Serien entity)
		{
			this.SendPropertyChanging();
			entity.Serien1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kategorien_x_Artikel")]
	public partial class Kategorien_x_Artikel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KategorieId;
		
		private int _ArtikelId;
		
		private EntityRef<Artikel> _Artikel;
		
		private EntityRef<Kategorien> _Kategorien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKategorieIdChanging(int value);
    partial void OnKategorieIdChanged();
    partial void OnArtikelIdChanging(int value);
    partial void OnArtikelIdChanged();
    #endregion
		
		public Kategorien_x_Artikel()
		{
			this._Artikel = default(EntityRef<Artikel>);
			this._Kategorien = default(EntityRef<Kategorien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KategorieId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int KategorieId
		{
			get
			{
				return this._KategorieId;
			}
			set
			{
				if ((this._KategorieId != value))
				{
					if (this._Kategorien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKategorieIdChanging(value);
					this.SendPropertyChanging();
					this._KategorieId = value;
					this.SendPropertyChanged("KategorieId");
					this.OnKategorieIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtikelId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ArtikelId
		{
			get
			{
				return this._ArtikelId;
			}
			set
			{
				if ((this._ArtikelId != value))
				{
					if (this._Artikel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArtikelIdChanging(value);
					this.SendPropertyChanging();
					this._ArtikelId = value;
					this.SendPropertyChanged("ArtikelId");
					this.OnArtikelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artikel_Kategorien_x_Artikel", Storage="_Artikel", ThisKey="ArtikelId", OtherKey="ArtikelId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Artikel Artikel
		{
			get
			{
				return this._Artikel.Entity;
			}
			set
			{
				Artikel previousValue = this._Artikel.Entity;
				if (((previousValue != value) 
							|| (this._Artikel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Artikel.Entity = null;
						previousValue.Kategorien_x_Artikels.Remove(this);
					}
					this._Artikel.Entity = value;
					if ((value != null))
					{
						value.Kategorien_x_Artikels.Add(this);
						this._ArtikelId = value.ArtikelId;
					}
					else
					{
						this._ArtikelId = default(int);
					}
					this.SendPropertyChanged("Artikel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategorien_Kategorien_x_Artikel", Storage="_Kategorien", ThisKey="KategorieId", OtherKey="KategorieId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Kategorien Kategorien
		{
			get
			{
				return this._Kategorien.Entity;
			}
			set
			{
				Kategorien previousValue = this._Kategorien.Entity;
				if (((previousValue != value) 
							|| (this._Kategorien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kategorien.Entity = null;
						previousValue.Kategorien_x_Artikels.Remove(this);
					}
					this._Kategorien.Entity = value;
					if ((value != null))
					{
						value.Kategorien_x_Artikels.Add(this);
						this._KategorieId = value.KategorieId;
					}
					else
					{
						this._KategorieId = default(int);
					}
					this.SendPropertyChanged("Kategorien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hefte")]
	public partial class Hefte : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HeftId;
		
		private string _Titel;
		
		private string _Beschreibung;
		
		private System.Nullable<int> _Jahr;
		
		private System.Data.Linq.Binary _Bild;
		
		private EntitySet<Hefte_x_Kunden> _Hefte_x_Kundens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHeftIdChanging(int value);
    partial void OnHeftIdChanged();
    partial void OnTitelChanging(string value);
    partial void OnTitelChanged();
    partial void OnBeschreibungChanging(string value);
    partial void OnBeschreibungChanged();
    partial void OnJahrChanging(System.Nullable<int> value);
    partial void OnJahrChanged();
    partial void OnBildChanging(System.Data.Linq.Binary value);
    partial void OnBildChanged();
    #endregion
		
		public Hefte()
		{
			this._Hefte_x_Kundens = new EntitySet<Hefte_x_Kunden>(new Action<Hefte_x_Kunden>(this.attach_Hefte_x_Kundens), new Action<Hefte_x_Kunden>(this.detach_Hefte_x_Kundens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeftId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HeftId
		{
			get
			{
				return this._HeftId;
			}
			set
			{
				if ((this._HeftId != value))
				{
					this.OnHeftIdChanging(value);
					this.SendPropertyChanging();
					this._HeftId = value;
					this.SendPropertyChanged("HeftId");
					this.OnHeftIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titel", DbType="NVarChar(100)")]
		public string Titel
		{
			get
			{
				return this._Titel;
			}
			set
			{
				if ((this._Titel != value))
				{
					this.OnTitelChanging(value);
					this.SendPropertyChanging();
					this._Titel = value;
					this.SendPropertyChanged("Titel");
					this.OnTitelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beschreibung", DbType="NVarChar(500)")]
		public string Beschreibung
		{
			get
			{
				return this._Beschreibung;
			}
			set
			{
				if ((this._Beschreibung != value))
				{
					this.OnBeschreibungChanging(value);
					this.SendPropertyChanging();
					this._Beschreibung = value;
					this.SendPropertyChanged("Beschreibung");
					this.OnBeschreibungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jahr", DbType="Int")]
		public System.Nullable<int> Jahr
		{
			get
			{
				return this._Jahr;
			}
			set
			{
				if ((this._Jahr != value))
				{
					this.OnJahrChanging(value);
					this.SendPropertyChanging();
					this._Jahr = value;
					this.SendPropertyChanged("Jahr");
					this.OnJahrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bild", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Bild
		{
			get
			{
				return this._Bild;
			}
			set
			{
				if ((this._Bild != value))
				{
					this.OnBildChanging(value);
					this.SendPropertyChanging();
					this._Bild = value;
					this.SendPropertyChanged("Bild");
					this.OnBildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hefte_Hefte_x_Kunden", Storage="_Hefte_x_Kundens", ThisKey="HeftId", OtherKey="HeftId")]
		public EntitySet<Hefte_x_Kunden> Hefte_x_Kundens
		{
			get
			{
				return this._Hefte_x_Kundens;
			}
			set
			{
				this._Hefte_x_Kundens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hefte_x_Kundens(Hefte_x_Kunden entity)
		{
			this.SendPropertyChanging();
			entity.Hefte = this;
		}
		
		private void detach_Hefte_x_Kundens(Hefte_x_Kunden entity)
		{
			this.SendPropertyChanging();
			entity.Hefte = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hefte_x_Kunden")]
	public partial class Hefte_x_Kunden : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HeftId;
		
		private int _KundenId;
		
		private System.Nullable<System.DateTime> _Erhalten;
		
		private System.Nullable<bool> _HatBestellt;
		
		private EntityRef<Hefte> _Hefte;
		
		private EntityRef<Kunden> _Kunden;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHeftIdChanging(int value);
    partial void OnHeftIdChanged();
    partial void OnKundenIdChanging(int value);
    partial void OnKundenIdChanged();
    partial void OnErhaltenChanging(System.Nullable<System.DateTime> value);
    partial void OnErhaltenChanged();
    partial void OnHatBestelltChanging(System.Nullable<bool> value);
    partial void OnHatBestelltChanged();
    #endregion
		
		public Hefte_x_Kunden()
		{
			this._Hefte = default(EntityRef<Hefte>);
			this._Kunden = default(EntityRef<Kunden>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeftId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HeftId
		{
			get
			{
				return this._HeftId;
			}
			set
			{
				if ((this._HeftId != value))
				{
					if (this._Hefte.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHeftIdChanging(value);
					this.SendPropertyChanging();
					this._HeftId = value;
					this.SendPropertyChanged("HeftId");
					this.OnHeftIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KundenId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int KundenId
		{
			get
			{
				return this._KundenId;
			}
			set
			{
				if ((this._KundenId != value))
				{
					if (this._Kunden.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKundenIdChanging(value);
					this.SendPropertyChanging();
					this._KundenId = value;
					this.SendPropertyChanged("KundenId");
					this.OnKundenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Erhalten", DbType="DateTime")]
		public System.Nullable<System.DateTime> Erhalten
		{
			get
			{
				return this._Erhalten;
			}
			set
			{
				if ((this._Erhalten != value))
				{
					this.OnErhaltenChanging(value);
					this.SendPropertyChanging();
					this._Erhalten = value;
					this.SendPropertyChanged("Erhalten");
					this.OnErhaltenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HatBestellt", DbType="Bit")]
		public System.Nullable<bool> HatBestellt
		{
			get
			{
				return this._HatBestellt;
			}
			set
			{
				if ((this._HatBestellt != value))
				{
					this.OnHatBestelltChanging(value);
					this.SendPropertyChanging();
					this._HatBestellt = value;
					this.SendPropertyChanged("HatBestellt");
					this.OnHatBestelltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hefte_Hefte_x_Kunden", Storage="_Hefte", ThisKey="HeftId", OtherKey="HeftId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Hefte Hefte
		{
			get
			{
				return this._Hefte.Entity;
			}
			set
			{
				Hefte previousValue = this._Hefte.Entity;
				if (((previousValue != value) 
							|| (this._Hefte.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hefte.Entity = null;
						previousValue.Hefte_x_Kundens.Remove(this);
					}
					this._Hefte.Entity = value;
					if ((value != null))
					{
						value.Hefte_x_Kundens.Add(this);
						this._HeftId = value.HeftId;
					}
					else
					{
						this._HeftId = default(int);
					}
					this.SendPropertyChanged("Hefte");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kunden_Hefte_x_Kunden", Storage="_Kunden", ThisKey="KundenId", OtherKey="KundenId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Kunden Kunden
		{
			get
			{
				return this._Kunden.Entity;
			}
			set
			{
				Kunden previousValue = this._Kunden.Entity;
				if (((previousValue != value) 
							|| (this._Kunden.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kunden.Entity = null;
						previousValue.Hefte_x_Kundens.Remove(this);
					}
					this._Kunden.Entity = value;
					if ((value != null))
					{
						value.Hefte_x_Kundens.Add(this);
						this._KundenId = value.KundenId;
					}
					else
					{
						this._KundenId = default(int);
					}
					this.SendPropertyChanged("Kunden");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Entitaeten")]
	public partial class Entitaeten : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntitaetId;
		
		private string _Name;
		
		private EntitySet<Markierungen> _Markierungens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntitaetIdChanging(int value);
    partial void OnEntitaetIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Entitaeten()
		{
			this._Markierungens = new EntitySet<Markierungen>(new Action<Markierungen>(this.attach_Markierungens), new Action<Markierungen>(this.detach_Markierungens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntitaetId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EntitaetId
		{
			get
			{
				return this._EntitaetId;
			}
			set
			{
				if ((this._EntitaetId != value))
				{
					this.OnEntitaetIdChanging(value);
					this.SendPropertyChanging();
					this._EntitaetId = value;
					this.SendPropertyChanged("EntitaetId");
					this.OnEntitaetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entitaeten_Markierungen", Storage="_Markierungens", ThisKey="EntitaetId", OtherKey="EntitaetId")]
		public EntitySet<Markierungen> Markierungens
		{
			get
			{
				return this._Markierungens;
			}
			set
			{
				this._Markierungens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Markierungens(Markierungen entity)
		{
			this.SendPropertyChanging();
			entity.Entitaeten = this;
		}
		
		private void detach_Markierungens(Markierungen entity)
		{
			this.SendPropertyChanging();
			entity.Entitaeten = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bestellung")]
	public partial class Bestellung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BestellId;
		
		private System.Nullable<int> _KundenId;
		
		private System.Nullable<System.DateTime> _Datum;
		
		private string _Bemerkung;
		
		private System.Nullable<int> _StatusId;
		
		private System.Nullable<bool> _Loeschvormerkung;
		
		private System.DateTime _ChangedAt;
		
		private EntitySet<Bestelldetail> _Bestelldetails;
		
		private EntityRef<Kunden> _Kunden;
		
		private EntityRef<Bestellstatus> _Bestellstatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBestellIdChanging(int value);
    partial void OnBestellIdChanged();
    partial void OnKundenIdChanging(System.Nullable<int> value);
    partial void OnKundenIdChanged();
    partial void OnDatumChanging(System.Nullable<System.DateTime> value);
    partial void OnDatumChanged();
    partial void OnBemerkungChanging(string value);
    partial void OnBemerkungChanged();
    partial void OnStatusIdChanging(System.Nullable<int> value);
    partial void OnStatusIdChanged();
    partial void OnLoeschvormerkungChanging(System.Nullable<bool> value);
    partial void OnLoeschvormerkungChanged();
    partial void OnChangedAtChanging(System.DateTime value);
    partial void OnChangedAtChanged();
    #endregion
		
		public Bestellung()
		{
			this._Bestelldetails = new EntitySet<Bestelldetail>(new Action<Bestelldetail>(this.attach_Bestelldetails), new Action<Bestelldetail>(this.detach_Bestelldetails));
			this._Kunden = default(EntityRef<Kunden>);
			this._Bestellstatus = default(EntityRef<Bestellstatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BestellId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BestellId
		{
			get
			{
				return this._BestellId;
			}
			set
			{
				if ((this._BestellId != value))
				{
					this.OnBestellIdChanging(value);
					this.SendPropertyChanging();
					this._BestellId = value;
					this.SendPropertyChanged("BestellId");
					this.OnBestellIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KundenId", DbType="Int")]
		public System.Nullable<int> KundenId
		{
			get
			{
				return this._KundenId;
			}
			set
			{
				if ((this._KundenId != value))
				{
					if (this._Kunden.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKundenIdChanging(value);
					this.SendPropertyChanging();
					this._KundenId = value;
					this.SendPropertyChanged("KundenId");
					this.OnKundenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datum", DbType="DateTime")]
		public System.Nullable<System.DateTime> Datum
		{
			get
			{
				return this._Datum;
			}
			set
			{
				if ((this._Datum != value))
				{
					this.OnDatumChanging(value);
					this.SendPropertyChanging();
					this._Datum = value;
					this.SendPropertyChanged("Datum");
					this.OnDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bemerkung", DbType="NVarChar(255)")]
		public string Bemerkung
		{
			get
			{
				return this._Bemerkung;
			}
			set
			{
				if ((this._Bemerkung != value))
				{
					this.OnBemerkungChanging(value);
					this.SendPropertyChanging();
					this._Bemerkung = value;
					this.SendPropertyChanged("Bemerkung");
					this.OnBemerkungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int")]
		public System.Nullable<int> StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					if (this._Bestellstatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loeschvormerkung", DbType="Bit")]
		public System.Nullable<bool> Loeschvormerkung
		{
			get
			{
				return this._Loeschvormerkung;
			}
			set
			{
				if ((this._Loeschvormerkung != value))
				{
					this.OnLoeschvormerkungChanging(value);
					this.SendPropertyChanging();
					this._Loeschvormerkung = value;
					this.SendPropertyChanged("Loeschvormerkung");
					this.OnLoeschvormerkungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedAt", DbType="DateTime")]
		public System.DateTime ChangedAt
		{
			get
			{
				return this._ChangedAt;
			}
			set
			{
				if ((this._ChangedAt != value))
				{
					this.OnChangedAtChanging(value);
					this.SendPropertyChanging();
					this._ChangedAt = value;
					this.SendPropertyChanged("ChangedAt");
					this.OnChangedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bestellung_Bestelldetail", Storage="_Bestelldetails", ThisKey="BestellId", OtherKey="BestellId")]
		public EntitySet<Bestelldetail> Bestelldetails
		{
			get
			{
				return this._Bestelldetails;
			}
			set
			{
				this._Bestelldetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kunden_Bestellung", Storage="_Kunden", ThisKey="KundenId", OtherKey="KundenId", IsForeignKey=true)]
		public Kunden Kunden
		{
			get
			{
				return this._Kunden.Entity;
			}
			set
			{
				Kunden previousValue = this._Kunden.Entity;
				if (((previousValue != value) 
							|| (this._Kunden.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kunden.Entity = null;
						previousValue.Bestellungs.Remove(this);
					}
					this._Kunden.Entity = value;
					if ((value != null))
					{
						value.Bestellungs.Add(this);
						this._KundenId = value.KundenId;
					}
					else
					{
						this._KundenId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kunden");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bestellstatus_Bestellung", Storage="_Bestellstatus", ThisKey="StatusId", OtherKey="StatusId", IsForeignKey=true)]
		public Bestellstatus Bestellstatus
		{
			get
			{
				return this._Bestellstatus.Entity;
			}
			set
			{
				Bestellstatus previousValue = this._Bestellstatus.Entity;
				if (((previousValue != value) 
							|| (this._Bestellstatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bestellstatus.Entity = null;
						previousValue.Bestellungs.Remove(this);
					}
					this._Bestellstatus.Entity = value;
					if ((value != null))
					{
						value.Bestellungs.Add(this);
						this._StatusId = value.StatusId;
					}
					else
					{
						this._StatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bestellstatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bestelldetails(Bestelldetail entity)
		{
			this.SendPropertyChanging();
			entity.Bestellung = this;
		}
		
		private void detach_Bestelldetails(Bestelldetail entity)
		{
			this.SendPropertyChanging();
			entity.Bestellung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bestelldetails")]
	public partial class Bestelldetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DetailId;
		
		private int _BestellId;
		
		private string _Campagne;
		
		private System.Nullable<int> _Jahr;
		
		private System.Nullable<int> _Seite;
		
		private string _ArtikelNr;
		
		private System.Nullable<int> _Menge;
		
		private string _Artikelbeschr;
		
		private string _FGD;
		
		private System.Nullable<decimal> _Einzelpreis;
		
		private System.Nullable<int> _Position;
		
		private string _Bemerkung;
		
		private EntityRef<Bestellung> _Bestellung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDetailIdChanging(int value);
    partial void OnDetailIdChanged();
    partial void OnBestellIdChanging(int value);
    partial void OnBestellIdChanged();
    partial void OnCampagneChanging(string value);
    partial void OnCampagneChanged();
    partial void OnJahrChanging(System.Nullable<int> value);
    partial void OnJahrChanged();
    partial void OnSeiteChanging(System.Nullable<int> value);
    partial void OnSeiteChanged();
    partial void OnArtikelNrChanging(string value);
    partial void OnArtikelNrChanged();
    partial void OnMengeChanging(System.Nullable<int> value);
    partial void OnMengeChanged();
    partial void OnArtikelbeschrChanging(string value);
    partial void OnArtikelbeschrChanged();
    partial void OnFGDChanging(string value);
    partial void OnFGDChanged();
    partial void OnEinzelpreisChanging(System.Nullable<decimal> value);
    partial void OnEinzelpreisChanged();
    partial void OnPositionChanging(System.Nullable<int> value);
    partial void OnPositionChanged();
    partial void OnBemerkungChanging(string value);
    partial void OnBemerkungChanged();
    #endregion
		
		public Bestelldetail()
		{
			this._Bestellung = default(EntityRef<Bestellung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DetailId
		{
			get
			{
				return this._DetailId;
			}
			set
			{
				if ((this._DetailId != value))
				{
					this.OnDetailIdChanging(value);
					this.SendPropertyChanging();
					this._DetailId = value;
					this.SendPropertyChanged("DetailId");
					this.OnDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BestellId", DbType="Int NOT NULL")]
		public int BestellId
		{
			get
			{
				return this._BestellId;
			}
			set
			{
				if ((this._BestellId != value))
				{
					if (this._Bestellung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBestellIdChanging(value);
					this.SendPropertyChanging();
					this._BestellId = value;
					this.SendPropertyChanged("BestellId");
					this.OnBestellIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Campagne", DbType="NVarChar(50)")]
		public string Campagne
		{
			get
			{
				return this._Campagne;
			}
			set
			{
				if ((this._Campagne != value))
				{
					this.OnCampagneChanging(value);
					this.SendPropertyChanging();
					this._Campagne = value;
					this.SendPropertyChanged("Campagne");
					this.OnCampagneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jahr", DbType="Int")]
		public System.Nullable<int> Jahr
		{
			get
			{
				return this._Jahr;
			}
			set
			{
				if ((this._Jahr != value))
				{
					this.OnJahrChanging(value);
					this.SendPropertyChanging();
					this._Jahr = value;
					this.SendPropertyChanged("Jahr");
					this.OnJahrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seite", DbType="Int")]
		public System.Nullable<int> Seite
		{
			get
			{
				return this._Seite;
			}
			set
			{
				if ((this._Seite != value))
				{
					this.OnSeiteChanging(value);
					this.SendPropertyChanging();
					this._Seite = value;
					this.SendPropertyChanged("Seite");
					this.OnSeiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtikelNr", DbType="NVarChar(50)")]
		public string ArtikelNr
		{
			get
			{
				return this._ArtikelNr;
			}
			set
			{
				if ((this._ArtikelNr != value))
				{
					this.OnArtikelNrChanging(value);
					this.SendPropertyChanging();
					this._ArtikelNr = value;
					this.SendPropertyChanged("ArtikelNr");
					this.OnArtikelNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Menge", DbType="Int")]
		public System.Nullable<int> Menge
		{
			get
			{
				return this._Menge;
			}
			set
			{
				if ((this._Menge != value))
				{
					this.OnMengeChanging(value);
					this.SendPropertyChanging();
					this._Menge = value;
					this.SendPropertyChanged("Menge");
					this.OnMengeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Artikelbeschr", DbType="NVarChar(100)")]
		public string Artikelbeschr
		{
			get
			{
				return this._Artikelbeschr;
			}
			set
			{
				if ((this._Artikelbeschr != value))
				{
					this.OnArtikelbeschrChanging(value);
					this.SendPropertyChanging();
					this._Artikelbeschr = value;
					this.SendPropertyChanged("Artikelbeschr");
					this.OnArtikelbeschrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FGD", DbType="NVarChar(50)")]
		public string FGD
		{
			get
			{
				return this._FGD;
			}
			set
			{
				if ((this._FGD != value))
				{
					this.OnFGDChanging(value);
					this.SendPropertyChanging();
					this._FGD = value;
					this.SendPropertyChanged("FGD");
					this.OnFGDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Einzelpreis", DbType="Money")]
		public System.Nullable<decimal> Einzelpreis
		{
			get
			{
				return this._Einzelpreis;
			}
			set
			{
				if ((this._Einzelpreis != value))
				{
					this.OnEinzelpreisChanging(value);
					this.SendPropertyChanging();
					this._Einzelpreis = value;
					this.SendPropertyChanged("Einzelpreis");
					this.OnEinzelpreisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="int")]
		public System.Nullable<int> Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bemerkung", DbType="nvarchar(255)")]
		public string Bemerkung
		{
			get
			{
				return this._Bemerkung;
			}
			set
			{
				if ((this._Bemerkung != value))
				{
					this.OnBemerkungChanging(value);
					this.SendPropertyChanging();
					this._Bemerkung = value;
					this.SendPropertyChanged("Bemerkung");
					this.OnBemerkungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bestellung_Bestelldetail", Storage="_Bestellung", ThisKey="BestellId", OtherKey="BestellId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Bestellung Bestellung
		{
			get
			{
				return this._Bestellung.Entity;
			}
			set
			{
				Bestellung previousValue = this._Bestellung.Entity;
				if (((previousValue != value) 
							|| (this._Bestellung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bestellung.Entity = null;
						previousValue.Bestelldetails.Remove(this);
					}
					this._Bestellung.Entity = value;
					if ((value != null))
					{
						value.Bestelldetails.Add(this);
						this._BestellId = value.BestellId;
					}
					else
					{
						this._BestellId = default(int);
					}
					this.SendPropertyChanged("Bestellung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bestellstatus")]
	public partial class Bestellstatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusId;
		
		private string _Status;
		
		private string _Beschreibung;
		
		private EntitySet<Bestellung> _Bestellungs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIdChanging(int value);
    partial void OnStatusIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnBeschreibungChanging(string value);
    partial void OnBeschreibungChanged();
    #endregion
		
		public Bestellstatus()
		{
			this._Bestellungs = new EntitySet<Bestellung>(new Action<Bestellung>(this.attach_Bestellungs), new Action<Bestellung>(this.detach_Bestellungs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beschreibung", DbType="NVarChar(255)")]
		public string Beschreibung
		{
			get
			{
				return this._Beschreibung;
			}
			set
			{
				if ((this._Beschreibung != value))
				{
					this.OnBeschreibungChanging(value);
					this.SendPropertyChanging();
					this._Beschreibung = value;
					this.SendPropertyChanged("Beschreibung");
					this.OnBeschreibungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bestellstatus_Bestellung", Storage="_Bestellungs", ThisKey="StatusId", OtherKey="StatusId")]
		public EntitySet<Bestellung> Bestellungs
		{
			get
			{
				return this._Bestellungs;
			}
			set
			{
				this._Bestellungs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bestellungs(Bestellung entity)
		{
			this.SendPropertyChanging();
			entity.Bestellstatus = this;
		}
		
		private void detach_Bestellungs(Bestellung entity)
		{
			this.SendPropertyChanging();
			entity.Bestellstatus = null;
		}
	}
}
#pragma warning restore 1591
